/****************************************************************************
** Meta object code from reading C++ file 'main_gui.cpp'
**
** Created by: The Qt Meta Object Compiler version 69 (Qt 6.9.1)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#include <QtCore/qtmochelpers.h>

#include <memory>


#include <QtCore/qxptype_traits.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'main_gui.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 69
#error "This file was generated using the moc from 6.9.1. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {
struct qt_meta_tag_ZN17RailwayMainWindowE_t {};
} // unnamed namespace

template <> constexpr inline auto RailwayMainWindow::qt_create_metaobjectdata<qt_meta_tag_ZN17RailwayMainWindowE_t>()
{
    namespace QMC = QtMocConstants;
    QtMocHelpers::StringRefStorage qt_stringData {
        "RailwayMainWindow",
        "refreshData",
        "",
        "performAnalysis",
        "updateChartDisplay",
        "createStationFlowChart",
        "createTimeSeriesChart",
        "createDirectionCompareChart",
        "createTrainLoadChart",
        "createFlowPredictionChart",
        "createPassengerHeatMap",
        "createStationBasedHeatMap",
        "createSampleHeatMap",
        "getHeatMapColor",
        "intensity",
        "radius",
        "getStationPosition",
        "std::string",
        "stationName",
        "double&",
        "x",
        "y",
        "createTrainSimulation",
        "exportData",
        "aboutApp",
        "onAnalysisTypeChanged",
        "index",
        "updateDisplays",
        "updateStationCombo"
    };

    QtMocHelpers::UintData qt_methods {
        // Slot 'refreshData'
        QtMocHelpers::SlotData<void()>(1, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'performAnalysis'
        QtMocHelpers::SlotData<void()>(3, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'updateChartDisplay'
        QtMocHelpers::SlotData<void()>(4, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createStationFlowChart'
        QtMocHelpers::SlotData<void()>(5, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createTimeSeriesChart'
        QtMocHelpers::SlotData<void()>(6, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createDirectionCompareChart'
        QtMocHelpers::SlotData<void()>(7, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createTrainLoadChart'
        QtMocHelpers::SlotData<void()>(8, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createFlowPredictionChart'
        QtMocHelpers::SlotData<void()>(9, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createPassengerHeatMap'
        QtMocHelpers::SlotData<void()>(10, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createStationBasedHeatMap'
        QtMocHelpers::SlotData<void()>(11, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'createSampleHeatMap'
        QtMocHelpers::SlotData<void()>(12, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'getHeatMapColor'
        QtMocHelpers::SlotData<QColor(double, int)>(13, 2, QMC::AccessPrivate, QMetaType::QColor, {{
            { QMetaType::Double, 14 }, { QMetaType::Int, 15 },
        }}),
        // Slot 'getStationPosition'
        QtMocHelpers::SlotData<void(const std::string &, double &, double &)>(16, 2, QMC::AccessPrivate, QMetaType::Void, {{
            { 0x80000000 | 17, 18 }, { 0x80000000 | 19, 20 }, { 0x80000000 | 19, 21 },
        }}),
        // Slot 'createTrainSimulation'
        QtMocHelpers::SlotData<void()>(22, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'exportData'
        QtMocHelpers::SlotData<void()>(23, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'aboutApp'
        QtMocHelpers::SlotData<void()>(24, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'onAnalysisTypeChanged'
        QtMocHelpers::SlotData<void(int)>(25, 2, QMC::AccessPrivate, QMetaType::Void, {{
            { QMetaType::Int, 26 },
        }}),
        // Slot 'updateDisplays'
        QtMocHelpers::SlotData<void()>(27, 2, QMC::AccessPrivate, QMetaType::Void),
        // Slot 'updateStationCombo'
        QtMocHelpers::SlotData<void()>(28, 2, QMC::AccessPrivate, QMetaType::Void),
    };
    QtMocHelpers::UintData qt_properties {
    };
    QtMocHelpers::UintData qt_enums {
    };
    return QtMocHelpers::metaObjectData<RailwayMainWindow, qt_meta_tag_ZN17RailwayMainWindowE_t>(QMC::MetaObjectFlag{}, qt_stringData,
            qt_methods, qt_properties, qt_enums);
}
Q_CONSTINIT const QMetaObject RailwayMainWindow::staticMetaObject = { {
    QMetaObject::SuperData::link<QMainWindow::staticMetaObject>(),
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN17RailwayMainWindowE_t>.stringdata,
    qt_staticMetaObjectStaticContent<qt_meta_tag_ZN17RailwayMainWindowE_t>.data,
    qt_static_metacall,
    nullptr,
    qt_staticMetaObjectRelocatingContent<qt_meta_tag_ZN17RailwayMainWindowE_t>.metaTypes,
    nullptr
} };

void RailwayMainWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    auto *_t = static_cast<RailwayMainWindow *>(_o);
    if (_c == QMetaObject::InvokeMetaMethod) {
        switch (_id) {
        case 0: _t->refreshData(); break;
        case 1: _t->performAnalysis(); break;
        case 2: _t->updateChartDisplay(); break;
        case 3: _t->createStationFlowChart(); break;
        case 4: _t->createTimeSeriesChart(); break;
        case 5: _t->createDirectionCompareChart(); break;
        case 6: _t->createTrainLoadChart(); break;
        case 7: _t->createFlowPredictionChart(); break;
        case 8: _t->createPassengerHeatMap(); break;
        case 9: _t->createStationBasedHeatMap(); break;
        case 10: _t->createSampleHeatMap(); break;
        case 11: { QColor _r = _t->getHeatMapColor((*reinterpret_cast< std::add_pointer_t<double>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<int>>(_a[2])));
            if (_a[0]) *reinterpret_cast< QColor*>(_a[0]) = std::move(_r); }  break;
        case 12: _t->getStationPosition((*reinterpret_cast< std::add_pointer_t<std::string>>(_a[1])),(*reinterpret_cast< std::add_pointer_t<double&>>(_a[2])),(*reinterpret_cast< std::add_pointer_t<double&>>(_a[3]))); break;
        case 13: _t->createTrainSimulation(); break;
        case 14: _t->exportData(); break;
        case 15: _t->aboutApp(); break;
        case 16: _t->onAnalysisTypeChanged((*reinterpret_cast< std::add_pointer_t<int>>(_a[1]))); break;
        case 17: _t->updateDisplays(); break;
        case 18: _t->updateStationCombo(); break;
        default: ;
        }
    }
}

const QMetaObject *RailwayMainWindow::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *RailwayMainWindow::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_staticMetaObjectStaticContent<qt_meta_tag_ZN17RailwayMainWindowE_t>.strings))
        return static_cast<void*>(this);
    return QMainWindow::qt_metacast(_clname);
}

int RailwayMainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QMainWindow::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 19)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 19;
    }
    if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 19)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 19;
    }
    return _id;
}
QT_WARNING_POP
